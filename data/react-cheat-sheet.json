{
  "id": "reactjs-cheat-sheet",
  "title": "রিঅ্যাক্ট JS টুকিটাকি",
  "slug": "reactjs-cheat-sheet",
  "description": "ফ্রন্ট-এন্ড ওয়েব ডেভেলপমেন্ট এর এক যুগান্তকারী টুলস এর নাম রিয়েক্ট জেএস। এটি একটি ইন্টারেক্টিভ ইউজার ইন্টারফেস (UI) ভিত্তিক জাভাস্ক্রিপ্ট লাইব্রেরী।",
  "colorPref": "#0288d1",
  "contents": [
    {
      "title": "রিঅ্যাক্ট JS ইন্সটল করা",
      "items": [
        {
          "definition": "npx এর সাহায্যে নতুন একটা রিআ্যাক্ট প্রোজেক্ট তৈরী করতে",
          "code": "npx create-react-app <project-name>"
        },
        {
          "definition": "npm এর সাহায্যে নতুন একটা রিআ্যাক্ট প্রোজেক্ট তৈরী করতে",
          "code": "npm init react-app <project-name>"
        },
        {
          "definition": "yarn এর সাহায্যে নতুন একটা রিআ্যাক্ট প্রোজেক্ট তৈরী করতে",
          "code": "yarn create react-app <project-name>"
        },
        {
          "definition": "সিডিএন দিয়ে রিএক্ট লোড করানো",
          "code": "<script src="https://unpkg.com/react@17/umd/react.development.js" crossorigin></script>
                   <script src="https://unpkg.com/react-dom@17/umd/react-dom.development.js" crossorigin></script>"
        }
        
      ]
    },
    {
      "title": "রিঅ্যাক্ট JS এ 'Hello world' প্রিন্ট করা",
      "items": [
        {
          "definition": "react কে ইম্পোর্ট(ES6 কনসেপ্ট) করে নেয়া",
          "code": "import React from 'react'"
        },
        {
          "definition": "ReactDOM কে ইম্পোর্ট করে নেয়া",
          "code": "import ReactDOM from 'react-dom'"
        },
        {
          "definition": "ReactDOM.render এই মেথডটি ২টি আরগুমেন্ট নেয় রেন্ডার ইলিমেন্ট এবং রেন্ডার স্কোপ",
          "code": "ReactDOM.render(<h1>Hello, world!</h1>,document.getElementById('root'))"
        }
      ]
    },
    {
      "title": "ES6 class নিয়ে কিছু কথা",
      "items": [
        {
          "definition": "লোকাল স্টেট এবং লাইফ-সাইকেল হুক কন্টেইন করে এমন একটি টেমপ্লেট",
          "code": "class"
        },
        {
          "definition": "লোকাল স্টেট ডিফাইন করে এবং কম্পোনেন্ট মাউন্ট হওয়ার আগে ফায়ার করবে",
          "code": "constructor(props)"
        },
        {
          "definition": "প্যারেন্ট constructor কে রেফারেন্স করে",
          "code": "super(props)"
        },
        {
          "definition": "লোকাল স্টেট তৈরি করার উদাহরন",
          "code": "this.state = {date: new Date()}"
        },
        {
          "definition": "ডোমে রেন্ডার করার একটি ফংশন যা রির্টান করবে ডোম ইলিমেন্ট",
          "code": "render() {return (<h1>Hello world</h1>)}"
        }
      ]
    },
    {
      "title": "স্টেটলেস-কম্পোনেন্ট ধারনা",
      "items": [
        {
          "definition": "স্টেটলেস-কম্পোনেন্টের স্ট্রাকচার",
          "code": "const Human = ()=>{return()}"
        },
        {
          "definition": "props যুক্ত স্টেটলেস-কম্পোনেন্ট",
          "code": "const Human = (props) =>{return(<h2>{props.name}</h2>)}"
        }
      ]
    },
    {
      "title": "রিঅ্যাক্ট JS লাইফ সাইকেল হুক",
      "items": [
        {
          "definition": "রেন্ডারিং এর আগে ইনভোক হয়",
          "code": "constructor (props)"
        },
        {
          "definition": "রেন্ডার করে",
          "code": "render()"
        },
        {
          "definition": "রেন্ডারিং এর পর ইনভোক হয়(যখন ডোম এভেইলএবল)",
          "code": "componentDidMount()"
        },
        {
          "definition": "ডোম রিমুভ হওয়ার আগে ইনভোক হয়",
          "code": "componentWillUnmount()"
        },
        {
          "definition": "কম্পোনেন্ট নতুন কোন প্রপস  গ্রহন করলে",
          "code": "componentWillReceiveProps()"
        },
        {
          "definition": "কম্পোনেন্ট নতুন প্রপস গ্রহন করার পর এবং রেন্ডারিং এর আগে ইনভোক হয়",
          "code": "shouldComponentUpdate()"
        },
        {
          "definition": "নতুন প্রপস অথবা স্টেট পরিবর্তন হওয়ার সাথে সাথে  ইনভোক হয় ",
          "code": "componentWillUpdate()"
        },
        {
          "definition": "কম্পোনেন্ট নতুন প্রপস গ্রহন করে তা রেন্ডার করার পর  ইনভোক হয়",
          "code": "componentDidUpdate()"
        }
      ]
    },
    {
      "title": "রিঅ্যাক্ট হুক্স",
      "items": [
        {
          "definition": "যে হুক দ্বারা ফাংশনাল কম্পোনেন্টে state ব্যবহার করা হয়",
          "code": "useState()"
        },
        {
          "definition": "কম্পোনেন্ট রেন্ডারিং, রি-রেন্ডারিং হওয়ার পর যে হুক কল হয়",
          "code": "useEffect(() => {}, [dependencies])"
        },
        {
          "definition": "যে হুক দ্বারা বিভিন্ন কম্পোনেন্ট context object গ্রহণ করে",
          "code": "useContext()"
        },
        {
          "definition": "একাধিক অথবা নেস্টেড object state আপডেট করতে হুক ব্যবহার করা যায়",
          "code": "useReducer(reducer, initialState)"
        },
        {
          "definition": "যে হুক দ্বারা কোন ফাংশন/ফাংশনাল কম্পোনেন্টকে মেমোরাইজ করা হয়",
          "code": "useMemo(() => <Child></Child>, [dependencies])"
        },
        {
          "definition": "যে হুক দ্বারা JSX(HTML) এর কোন এলিম্যান্টের রেফারেন্স রাখা হয়",
          "code": "const inputRef = useRef(null)"
        },
        {
          "definition": "যে হুক দ্বারা DOM measurements(scroll event, viewport height/width) করা যায় এবং synchronously re-render হতে থাকে state আপডেটের পর",
          "code": "useLayoutEffect(() => {}, [dependencies])"
        }
      ]
    },
    {
      "title": "রিঅ্যাক্ট রাউটার হুক্স",
      "items": [
        {
          "definition": "ডাইন্যামিক্যালি নেভিগেশন বা রুট পরিবর্তন করতে চাইলে",
          "code": "useHistory()"
        },
        {
          "definition": "ডাইন্যামিক্যালি URL প্যারামিটার সেট করতে চাইলে",
          "code": "useParams()"
        },
        {
          "definition": "বর্তমান URL এর অবস্থান জানতে বা ব্যবহার করতে হলে",
          "code": "useLocation()"
        },
        {
          "definition": "প্রদত্ত কম্পোনেন্ট একটি নির্দিষ্ট পৃষ্ঠায় আছে কিনা তা জানুন",
          "code": "useRouteMatch()"
        }
      ]
    },
    {
      "title": "রিঅ্যাক্ট রাউটার v5",
      "items": [
        {
          "definition": "npm এর সাহায্যে রাউটার ইন্সটল",
          "code": "npm install react-router-dom"
        },
        {
          "definition": "yarn এর সাহায্যে রাউটার ইন্সটল",
          "code": "yarn add react-router-dom"
        },
        {
          "definition": "Router সেট করতে App.js এ যুক্ত করুন",
          "code": "import { BrowserRouter as Router } from 'react-router-dom'"
        },
        {
          "definition": "Router Render করতে App.js এ যুক্ত করুন",
          "code": "import { BrowserRouter as Router, Route } from 'react-router-dom'"
        },
        {
          "definition": "লিংক বা সুইচ এর মাধ্যমে পেইজ পরিবর্তন করতে App.js এ যুক্ত করুন",
          "code": "import { BrowserRouter as Router, Route, Link or Switch } from 'react-router-dom'"
        },
        {
          "definition": "ন্যাভ লিংক মাধ্যমে পেইজ পরিবর্তন করতে App.js এ যুক্ত করুন",
          "code": "import { NavLink } from 'react-router-dom'"
        },
        {
          "definition": "match অবজেক্ট",
          "code": "match.params , match.isExact , match.path , match.url"
        },
        {
          "definition": "সুইচ এর একটি উদাহরণ",
          "code": "<Router> <Switch> <Route path='/about' component={About}/> </Switch> </Router>"
        },
        {
          "definition": "লিংক এর একটি উদাহরন",
          "code": "<Link to='/about'> About </Link>"
        },
        {
          "definition": "ন্যাভ লিংক এর একটি উদাহরন",
          "code": "<NavLink to='/about'> About </NavLink>"
        },
        {
          "definition": "Route-এ প্যারামিটার পাস করতে হলে",
          "code": "<Router> <Switch> <Route path='/about/:param' component={About}/> </Switch> </Router>"
        },
        {
          "definition": "Protected Route এর একটি উদাহরণ",
          "code": "<Switch> <Route path='/home' component={Home}/> {isAuthenticated ? <> <Route path='/about/:parma' component ={About} </> : <Redirect to='/home'/> } </Switch>"
        }
      ]
    }
  ]
}
