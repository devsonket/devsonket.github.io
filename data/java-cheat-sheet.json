{
    "id": "java-cheat-sheet",
    "title": "জাভা প্রোগ্রামিং",
    "slug": "java-cheat-sheet",
    "description": "প্রোগ্রামিং ল্যাঙ্গুয়েজ জাভা",
    "colorPref": "#3A241F",
    "contents": [
      {
        "title": "ডাটা টাইপ",
        "items": [
          {
            "definition": "অক্ষর",
            "code": "char"
          }, {
            "definition": "পূর্ণসংখ্যা [রেঞ্জ -২^৩১ থেকে (২^৩১ - ১)]",
            "code": "int"
          }, {
            "definition": "ছোট পূর্ণসংখ্যা [রেঞ্জ -২^১৫ থেকে (২^১৫ - ১)]",
            "code": "short"
          }, {
            "definition": "বড় পূর্ণসংখ্যা [রেঞ্জ -২^৬৩ থেকে (২^৬৩ - ১)]",
            "code": "long"
          }, {
            "definition": "ফ্লোটিং পয়েন্ট সংখ্যা [সিঙ্গেল-প্রেসিশন]",
            "code": "float"
          }, {
            "definition": "ডাবল পয়েন্ট সংখ্যা [ডবল-প্রেসিশন]",
            "code": "double"
          }
        ]
      }, {
        "title": "গাণিতিক অপারেশন",
        "items": [
          {
            "definition": "সাধারন গাণিতিক অপারেশন",
            "code": " +, -, *, /, %"
          }, {
            "definition": "i এ ১ যোগ করবে অথবা ১ বিয়োগ করে i এর মধ্যে রাখবে, পরে i এর ভ্যালু রিটার্ন করবে",
            "code": "++i,--i"
          }, {
            "definition": "i এর আগের ভ্যালু রির্টান করবে,পরে i এর ভ্যালু ১ বাড়াবে অথবা কমাবে",
            "code": "i++,i--"
          }, {
            "definition": "বেসিক লজিক্যাল অপারেটর",
            "code": "&&,||,!"
          }, {
            "definition": "বিট লজিক্যাল অপারেটর অথবা বিটওয়াইজ অপারেটর",
            "code": "&, |, ^, ~!, <<, >>"
          }, {
            "definition": "তুলনামূলক অপারেটর",
            "code": " ==, !=, <, >, <=, >="
          }, {
            "definition": "নির্ধারিত করন অপারেটর",
            "code": "="
          }
        ]
      }, {
        "title": "স্ক্যানার দিয়ে ইনপুট নেয়া",
        "items": [
          {
            "definition": "স্ক্যানার অব্জেক্ট তৈরি",
            "code": "Scanner key = new Scanner(System.in)"
          },{
            "definition": "ইন্টিজার ইনপুট নেয়া",
            "code": "key.nextInt()"
          },{
            "definition": "ডবল ইনপুট নেয়া",
            "code": "key.nextDouble()"
          },{
            "definition": "লং ইনপুট নেয়া",
            "code": "key.nextLong()"
          },{
            "definition": "স্পেসসহ স্ট্রিং ইনপুট নেয়া",
            "code": "key.nextLine()"
          },{
            "definition": "স্পেস ছাড়া স্ট্রিং ইনপুট নেয়া",
            "code": "key.next()"
          },{
            "definition": "ক্যারেক্টার ইনপুট নেয়া",
            "code": "key.next().charAt(0)"
          }
        ]
      },{
          "title": "গাণিতিক ফাংশন",
          "items": [
            {
              "definition": "বর্গমূল করার জন্য",
              "code": "Math.sqrt()"
            }, {
              "definition": "সাধারন লগারিদম পাওয়ার জন্য",
              "code": "Math.log()"
            }, {
              "definition": "এক্সপোনেনশিয়াল নাম্বার এর জন্য",
              "code": "Math.exp()"
            }, {
              "definition": "y এর পাওয়ার হিসেবে x কে নেয়ার জন্য",
              "code": "Math.pow(x,y)"
            }, {
              "definition": "x এর নিকটস্থ, x এর তুলনায় বড়মানের পূর্ণসংখ্যার জন্য",
              "code": "Math.ceil(x)"
            }, {
              "definition": "x এর নিকটস্থ, x এর তুলনায় ছোটমানের পূর্ণসংখ্যার জন্য",
              "code": "Math.floor(x)"
            }, {
              "definition": "x এর এবসোলিউট ভ্যালু এর জন্য ",
              "code": "Math.abs(x)"
            }, {
              "definition": "দৈবচয়নে(রান্ডম) নাম্বার জেনারেট করার জন্য",
              "code": "Math.random()"
            }
          ]
        },{
          "title": "প্রচলিত বিশেষ ক্যারেক্টার",
          "items": [
            {
              "definition": "নতুন লাইন প্রর্দশন",
              "code": "\\n"
            }, {
              "definition": "ট্যাব প্রর্দশন",
              "code": "\\t"
            }, {
              "definition": "পূর্ণসংখ্যা প্রর্দশন",
              "code": "%d"
            }, {
              "definition": "ফ্লোটিং পয়েন্ট সংখ্যা প্রর্দশন",
              "code": "%f"
            }, {
              "definition": "ডাবল পয়েন্ট সংখ্যা প্রর্দশন",
              "code": "%lf"
            }, {
              "definition": "স্ট্রিং প্রর্দশন",
              "code": "%s"
            }, {
              "definition": "ক্যারেক্টার প্রর্দশন",
              "code": "%c"
            }
          ]
          }, {
            "title": "স্ট্রিং ক্লাসের মেথড",
            "items": [
              {
                "definition": "স্ট্রিং এর দৈর্ঘ্য",
                "code": "stringName.length()"
              },{
                "definition": "স্ট্রিং ফর্ম্যাট",
                "code": "String.format(\"I am %d years old.\",myAge);"
              },{
                "definition": "স্ট্রিং এর i ইন্ডেক্সের ক্যারেক্টার",
                "code": "stringName.charAt(i)"
              },{
                "definition": "স্ট্রিং এর i ইন্ডেক্সের ক্যারেক্টারের ASCII মান",
                "code": "stringName.codePointAt(i)"
              },{
                "definition": "স্ট্রিং-কে ক্যারেক্টার এরেতে রূপান্তর",
                "code": "stringName.toCharArray()"
              },{
                "definition": "দুটি স্ট্রিং এর তুলনা",
                "code": "stringOne.compareTo(stringTwo)"
              },{
                "definition": "দুটি স্ট্রিং এর তুলনা, ছোট/বড় হাতের অক্ষর ব্যবধান না করে",
                "code": "stringOne.compareToIgnoreCase(stringTwo)"
              },{
                "definition": "দুটি স্ট্রিং একই কি-না",
                "code": "stringOne.equals(stringTwo)"
              },{
                "definition": "দুটি স্ট্রিং একই কি-না, ছোট/বড় হাতের অক্ষর ব্যবধান না করে",
                "code": "stringOne.equalsIgnoreCase(stringTwo)"
              },{
                "definition": "স্ট্রিং-কে রেজেক্স দিয়ে ভাগ করা",
                "code": "stringName.split(\" \");"
              },{
                "definition": "স্ট্রিং এর সব ক্যারেক্টারকে ছোট হাতের করে দেয়া",
                "code": "stringName.toLowerCase()"
              },{
                "definition": "স্ট্রিং এর সব ক্যারেক্টারকে বড় হাতের করে দেয়া",
                "code": "stringName.toUpperCase()"
              },{
                "definition": "স্ট্রিং যুক্ত করা",
                "code": "stringName.concat(\"add this also.\") or stringName = stringName+\"add this also.\" "
              },{
                "definition": "স্ট্রিং এর প্রথম ও শেষের স্পেস বাদ দেয়া",
                "code": "stringName.trim()"
              },{
                "definition": "স্ট্রিং এ ch ক্যারেক্টারের প্রথম ইন্ডেক্স",
                "code": "stringName.indexOf(ch)"
              }
            ]
          },{
            "title": "স্ট্রিং বিল্ডার ক্লাসের মেথড",
            "items": [{
              "definition": "স্ট্রিং বিল্ডার এর দৈর্ঘ্য",
              "code": "SBName.length();"
            }, {
              "definition": "স্ট্রিং বিল্ডার এর i ইন্ডেক্সের ক্যারেক্টার",
              "code": "SBName.charAt(i);"
            }, {
              "definition": "স্ট্রিং বিল্ডার এর al ক্যারেক্টারের ইন্ডেক্স রিটার্ন করে",
              "code": "SBName.indexOf(\"al\");"
            }, {
              "definition": "স্ট্রিং বিল্ডার এর append মেথড প্যারামিটার ভ্যালূ বর্তমান স্ট্রিং বিল্ডার অবজেক্টের সাথে যুক্ত করে ",
              "code": "SBName.append('c');"
            }, {
              "definition": "স্ট্রিং বিল্ডার এর i ইন্ডেক্সে নতুন ক্যারেক্টার ইনসার্ট করা",
              "code": "SBName.insert(i, \"-\");"
            }, {
              "definition": "স্ট্রিং বিল্ডার এর 1 থেকে n তম ইনডেক্স ডিলিট করা",
              "code": "SBName.delete(1, n);"
            }, {
              "definition": "স্ট্রিং বিল্ডার এর i তম ইনডেক্স এর ডাটা ডিলিট করা",
              "code": "SBName.deleteCharAt(i);"
            }, {
              "definition": "স্ট্রিং বিল্ডার এর ক্যারেক্টার সিকুয়েন্সকে রিভার্স করে",
              "code": "SBName.reverse()"
            }, {
              "definition": "স্ট্রিং বিল্ডার অবজেক্টকে স্ট্রিং এ কনভার্ট করে",
              "code": "SBName.toString();"
            }, {
              "definition": "স্ট্রিং বিল্ডারের কিছু ক্যারেক্টার রিপ্লেস করা",
              "code": "SBName.replace(int start, int end, String str);"
            }, {
              "definition": "স্ট্রিং বিল্ডারের i ইনডেক্সে ক্যারেক্টার সেট করা",
              "code": "SBName.setCharAt(int index, char ch)"
            }]
          },{
            "title": "আই ও (I/O)",
            "items": [{
              "definition": "নতুন ফাইল তৈরি করা",
              "code": "File inp = new File(\"input.txt\"); , File outp = new File(\"output.txt\");"
            }, {
              "definition": "ফাইল রিডার ক্লাস ব্যাবহার করা হয় কোন ফাইল ওপেন করে ক্যারেক্টার রিড করার জন্য",
              "code": "FileReader inFile = new FileReader(inp);"
            }, {
              "definition": "read() মেথড ফাইল থেকে ASCII ক্যারেক্টার রিড করে, এবং -1 রিটার্ন করে ফাইল রিড করা শেষে",
              "code": "inFile.read())!=-1"
            }, {
              "definition": "ফাইল রাইটার ক্লাস ব্যাবহার করা হয় কোন ফাইলে ক্যারেক্টার রাইট করার জন্য",
              "code": "FileWriter outFile = new FileWriter(outp);"
            }, {
              "definition": "write(ch) মেথড ফাইলে ASCII ক্যারেক্টার রাইট করে,",
              "code": "outFile.write(ch);"
            }, {
              "definition": "ফাইল ডাটা বাইট হিসেবে রিড করে",
              "code": "FileInputStream inFile = new FileInputStream(\"input.txt\");"
            }, {
              "definition": "read() মেথড ফাইল থেকে বাইট রিড করে, এবং -1 রিটার্ন করে ফাইল রিড করা শেষে",
              "code": "byteRead = (byte)inFile.read(); , byteRead != -1"
            }, {
              "definition": "ফাইলে ডাটা বাইট হিসেবে রাইট করে",
              "code": "FileOutputStream outFile = new FileOutputStream(\"out.txt\"); "
            }, {
              "definition": "write(byteRead) মেথড ফাইলে ডাটা বাইট হিসেবে রাইট করার জন্য ব্যাবহার করা হয়",
              "code": "outFile.write(byteRead);"
            }, {
              "definition": "ইনপুট স্ট্রিম থেকে প্রিমিটিভ ডাটা রিড করে",
              "code": "DataInputStream dis = new DataInputStream(inFile);"
            }, {
              "definition": "আউটপুট স্ট্রিমে পোর্টেবল ওয়েতে প্রিমিটিভ ডাটা রাইট করে",
              "code": "DataOutputStream dos = new DataOutputStream(outFile);"
            }, {
              "definition": "একাধিক ইনপুট স্ট্রিমকে কনক্যাটেনেট করে",
              "code": "SequenceInputStream file3 = new SequenceInputStream(file1,file2);"
            },{
              "definition": "বর্তমান ইনপুট স্ট্রিম থেকে ক্যারেক্টার রিড করে",
              "code": "InputStreamReader ir = new InputStreamReader(System.in)"
            },{
              "definition": "বর্তমান আউটপুট স্ট্রিমে ক্যারেক্টার এনকোড করে UTF-8 অথবা UTF-16 রাইট করে",
              "code": "OutputStream os = new FileOutputStream(\"output.txt\");, Writer osw = new OutputStreamWriter(os);"
            },{
              "definition": "বর্তমান ইনপুট স্ট্রিম থেকে ক্যারেক্টার রিড করে বাফারড পদ্ধতিতে, যেটি পারফরমেন্স বৃদ্ধি করে",
              "code": "BufferedReader br =new BufferedReader(new InputStreamReader(System.in));"
            },{
              "definition": "read() মেথড ফাইল থেকে ক্যারেক্টার রিড করে বাফারড পদ্ধতিতে",
              "code": "String str = br.readLine();"
            },{
              "definition": "বর্তমান ফাইলে ক্যারেক্টার এনকোড করে UTF-8 অথবা UTF-16 রাইট করে বাফারড পদ্ধতিতে",
              "code": "BufferedWriter writer = new BufferedWriter(new FileWriter(destination))"
            },{
              "definition": "বর্তমান ইনপুট স্ট্রিম থেকে বাইট রিড করে বাফারড পদ্ধতিতে, যেটি পারফরমেন্স বৃদ্ধি করে",
              "code": "BufferedInputStream inBuffer = new BufferedInputStream(new FileInputStream(\"text2.dat\"));"
            },{
              "definition": "read() মেথড ফাইল থেকে বাইট রিড করে, এবং -1 রিটার্ন করে ফাইল রিড করা শেষে",
              "code": "(ch= inBuffer.read()) != -1"
            },{
              "definition": "বর্তমান আউটপুট স্ট্রিমে বাইট রাইট করে বাফারড পদ্ধতিতে",
              "code": "BufferedOutputStream outBuffer = new BufferedOutputStream(System.out);"
            },{
              "definition": "write(ch) মেথড আউটপুট স্ট্রিমে ডাটা বাইট হিসেবে রাইট করার জন্য ব্যাবহার করা হয়",
              "code": "outBuffer.write(ch);"
            },{
              "definition": "কোন ফাইল থেকে রিড করা",
              "code": "Scanner reader = new Scanner(new File(\"input2.txt\"));"
            }]
          },{
            "title": "কালেকশন এ পি আই (collection API)",
            "items": [{
              "definition": "ArrayList একধরনের ডাইনামিক এরে সাপোর্ট করে",
              "code": "ArrayList<Integer> numbers = new ArrayList<>();"
            }, {
              "definition": "add() মেথড ArrayList এ নতুন অবজেক্ট অ্যাড করে",
              "code": "numbers.add(200);"
            }, {
              "definition": "get() মেথড n তম ইনডেক্স রিটার্ন করে",
              "code": "numbers.get(n);"
            }, {
              "definition": "size() মেথড ArrayList সাইজ রিটার্ন করে",
              "code": "numbers.size();"
            }, {
              "definition": "clear() ArrayList কে খালি করে",
              "code": "numbers.clear();"
            },{
              "definition": "বুলিয়ান ভ্যালু true রিটার্ন করে যদি লিস্ট এ কোন ভ্যালু না থাকে",
              "code": "numbers.isEmpty()"
            },{
              "definition": "বুলিয়ান ভ্যালু true রিটার্ন করে যদি লিস্ট এ মেথড প্যারামিটার ভ্যালু থাকে",
              "code": "numbers.contains(Object o)"
            },{
              "definition": "ArrayList থেকে ভ্যালু  রিমুভ করে",
              "code": "numbers.remove(Object o)"
            },{
              "definition": "toArray() মেথড ArrayList কে array তে কনভার্ট করে",
              "code": "String[] y = x.toArray(new String[0]);"
            }]
          },{
            "title": "কালেকশন এ পি আই (collection API)-LinkedList",
            "items": [{
              "definition": "জাভাতে LinkedList ক্লাস linked-list ডেটা স্ট্রাকচার provide করে",
              "code": "LinkedList<Integer> myLinkedList = new LinkedList<>();"
            }, {
              "definition": "add(E e) মেথড LinkedList এ নতুন অবজেক্ট অ্যাড করে",
              "code": " myLinkedList.add(1);"
            }, {
              "definition": "কোন স্পেসিফিক ইন্ডেক্স এ add করা",
              "code": "myLinkedList.add(index, element);"
            },{
              "definition": "offer(E e) মেথড LinkedList এ নতুন অবজেক্ট অ্যাড করে, return টাইপ boolean",
              "code": "myLinkedList.offer(E e);"
            }, {
              "definition": "addFirst(E e) LinkedList এর প্রথমে add করে, return টাইপ void",
              "code": " myLinkedList.addFirst(E e);"
            }, {
              "definition": "offerFirst(E e) LinkedList এর প্রথমে add করে, return টাইপ boolean",
              "code": "myLinkedList.offerFirst(E e);"
            },{
              "definition": "addLast(E e) LinkedList এর শেষে add করে, return টাইপ void",
              "code": "myLinkedList.addLast(E e);"
            },{
              "definition": "offerLast(E e) LinkedList এর শেষে add করে, return টাইপ boolean",
              "code": "myLinkedList.offerLast(E e);"
            },{
              "definition": "contains(Object o) বুলিয়ান ভ্যালু true রিটার্ন করে যদি লিস্ট এ মেথড প্যারামিটার ভ্যালু থাকে",
              "code": "myLinkedList.contains(Object o);"
            },{
              "definition": "getFirst() LinkedList এর প্রথম element return করে",
              "code": "myLinkedList.getFirst();"
            },{
              "definition": "getLast() LinkedList এর শেষ element return করে",
              "code": "myLinkedList.getLast();"
            },{
              "definition": "indexOf(Object o) LinkedList এ মেথড প্যারামিটার ভ্যালুর first occurrence এর ইন্ডেক্স return করে। মেথড প্যারামিটার ভ্যালুটি লিঙ্কড লিস্টে না পাওয়া গেলে - 1 রিটার্ন করে",
              "code": "myLinkedList.indexOf(Object o);"
            },{
              "definition": "lastIndexOf(Object o) LinkedList এ মেথড প্যারামিটার ভ্যালুর last occurrence এর ইন্ডেক্স return করে। মেথড প্যারামিটার ভ্যালুটি লিঙ্কড লিস্টে না পাওয়া গেলে - 1 রিটার্ন করে",
              "code": "myLinkedList.lastIndexOf(Object o);"
            },{
              "definition": "peek() LinkedList এর head (প্রথম element) return করে কিন্ত remove করে না।",
              "code": "myLinkedList.peek();"
            },{
              "definition": "poll() LinkedList এর head (প্রথম element) return করে এবং remove করে।",
              "code": "myLinkedList.poll();"
            },{
              "definition": "peekFirst() LinkedList এর প্রথম element return করে কিন্ত remove করে না।",
              "code": "myLinkedList.peekFirst();"
            },{
              "definition": "pollFirst() LinkedList এর প্রথম element return করে এবং remove করে।",
              "code": "myLinkedList.pollFirst();"
            },{
              "definition": "peekLast() LinkedList এর শেষ element return করে এবং remove করে না।",
              "code": "myLinkedList.peekLast();"
            },{
              "definition": "pollLast() LinkedList এর শেষ element return করে এবং remove করে।",
              "code": "myLinkedList.pollLast();"
            },{
              "definition": "set(int index, E element) LinkedList এর নির্দিষ্ট index এ element আপডেট করে",
              "code": "myLinkedList.set(int index, E element);"
            },{
              "definition": "remove() LinkedList এর  প্রথম ইলিমেন্টকে (head) remove এবং return করে",
              "code": "myLinkedList.remove();"
            },{
              "definition": "remove(int index) LinkedList থেকে index তম ইলিমেন্টকে remove এবং return করে",
              "code": "myLinkedList.remove(int index);"
            },{
              "definition": "remove(Object o) LinkedList থেকে মেথড প্যারামিটার ভ্যালুর first occurrence কে remove এবং return করে",
              "code": "myLinkedList.remove(Object o);"
            },{
              "definition": "removeFirst() LinkedList থেকে প্রথম ইলিমেন্টকে remove এবং return করে ",
              "code": "myLinkedList.removeFirst();"
            },{
              "definition": "removeLast() LinkedList থেকে শেষ ইলিমেন্টকে remove এবং return করে ",
              "code": "myLinkedList.removeLast();"
            },{
              "definition": "size() LinkedList এর সাইজ return করে",
              "code": "myLinkedList.size();"
            },{
              "definition": "toArray() LinkedList কে Array তে কনভার্ট করে",
              "code": "myLinkedList.toArray();"
            },{
              "definition": "addAll(Collection<? extends E> c) LinkedList এ কোন স্পেসিফিক collection add করে",
              "code": "myLinkedList.addAll(new ArrayList<>(Arrays.asList(4,5,6)));"
            },{
              "definition": "descendingIterator() LinkedList এর ইলিমেন্ট গুলোর একটি Descending Iterator return করে ",
              "code": "myLinkedList.descendingIterator();"
            },{
              "definition": "listIterator(int index) LinkedList এর মেথড প্যারামিটার ভ্যালু তম ইন্ডেক্স থেকে শেষ পর্যন্ত ইলিমেন্ট গুলোর একটি list-iterator return করে ",
              "code": "myLinkedList.listIterator(int index);"
            }]
          }
          
    ]
  }
